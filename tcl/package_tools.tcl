package provide muppet 1.3.1
namespace eval muppet {
    namespace export *
} 

package require qcode 6

proc muppet::service {service action} {
    sh invoke-rc.d $service $action
}

proc muppet::is_service_running {service} {
    #| Return true if this service is runing and false otherwise.
    # pidof returns exit status 0 if a running service is found and 1 otherwise.
    
    set status 0
    # Catch error generated by pidof returning a non-zero exit status
    if {[catch {exec pidof -s $service} result options]} {
	global errorCode errorInfo
	if {[lindex $errorCode 0] eq "CHILDSTATUS"} {
	    # Update exit status
	    set status [lindex $errorCode 2]
	} else {
	    # Some other error occured
	    error $result $errorInfo $errorCode
	}
    } 

    if { $status == 0 } {
	return true
    } else {
	return false
    }
}

proc muppet::sh {args} {
    #| Run a command echoing stdout and stderr to user
    #| Capture stdout via tee pipe in order to return stdout in result
    #
    # echo command
    puts stderr "$args"
    set out_file [qc::file_temp "" 600]
    ::exec -ignorestderr -- >@stdout 2>@stderr {*}$args | tee $out_file
    set stdout [cat $out_file]
    file delete $out_file
    return $stdout
}

proc muppet::gets_with_timeout {timeout default_value} {
    # Return stdin or default value if times out
    global stdin
    set id [after $timeout [list set ::stdin $default_value]]
    fileevent stdin readable {gets stdin stdin}
    vwait stdin
    after cancel $id
    set data $stdin
    unset stdin
    return $data
}
